apiVersion: batch/v1
kind: Job
metadata:
  name: radarr-init
  labels:
    release: "{{ .Release.Name }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-delete-policy": before-hook-creation
    "helm.sh/hook-weight": "10"
spec:
  backoffLimit: 1
  template:
    metadata:
      name: "{{.Release.Name}}-radarr-finalizer"
      labels:
        app: "{{ .Release.Name }}"
    spec:
      restartPolicy: Never
      initContainers:
        - name: wait-for-radarr
          image: rapidfort/curl:latest
          command:
            [
              "sh",
              "-c",
              "until curl  \"http://servarr-radarr.{{ .Release.Namespace }}.svc.cluster.local:7878\"; do echo waiting for servarr-radarr; sleep 5; done;",
            ]
      containers:
      - name: initialize-radarr
        image: "nyurik/alpine-python3-requests"
        env:
          - name: PYTHONUNBUFFERED
            value: "1"
          - name: RADARR_HOST
            value: "{{ .Release.Namespace }}-radarr:7878"
          - name: APIKEY
            value: "{{ $.Values.global.apikey }}"
          - name: TORRENT_SERVICE
            value: "{{ .Release.Namespace }}-qbittorrent"
          - name: TORRENT_ADMIN
            value: "{{ $.Values.torrent.username }}"
          - name: TORRENT_PASSWORD
            value: "{{ $.Values.torrent.password }}"
        command:
          - "/bin/sh"
          - "-ec"
        args:
          - "python3 -u /mnt/init-jellyseerr.py 2>&1;"
        volumeMounts:
          - mountPath: "/mnt"
            name: python-script
      volumes:
        - name: python-script
          configMap:
            name: init-jellyseerr-python-scripts