{{- if .Values.initJellyseerr -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: jellyseer-init
  labels:
    release: "{{ .Release.Name }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    "helm.sh/hook": post-install, post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation
    "helm.sh/hook-weight": "11"
spec:
  backoffLimit: 1
  template:
    metadata:
      name: "{{.Release.Name}}-jellyseer-finalizer"
      labels:
        app: "{{ .Release.Name }}"
    spec:
      restartPolicy: Never
      initContainers:
        - name: wait-for-jellyseerr
          image: rapidfort/curl:latest
          command:
            - "sh"
            - "-c"
            - "until curl \"http://servarr-jellyseerr.{{ .Release.Namespace }}.svc.cluster.local:10241\"; do echo waiting for servarr-jellyseerr; sleep 5; done;sleep 10;"
      containers:
      - name: integrate-jellyfin
        image: "rapidfort/curl:latest"
        env:
          - name: JELLYFIN_USERNAME
            value: "{{ $.Values.dash.username }}"
          - name: JELLYFIN_PASSWORD
            value: "{{ $.Values.dash.password }}"
          - name: JELLYFIN_EMAIL
            value: "{{ $.Values.dash.mail }}"
          - name: APIKEY
            value: "{{ $.Values.global.apikey }}"
        command:
          - "/bin/sh"
          - "-ec"
        args:
          - "curl -k -v -H 'Content-Type: application/json' -X POST \"http://servarr-jellyseerr.{{ .Release.Namespace }}.svc.cluster.local:10241/api/v1/auth/jellyfin\" -d '{\"username\": \"$(JELLYFIN_USERNAME)\",\"password\": \"$(JELLYFIN_PASSWORD)\", \"hostname\": \"http://servarr-jellyfin:8096/\", \"email\": \"$(JELLYFIN_EMAIL)\" }'"
      - name: integrate-sonarr
        image: "rapidfort/curl:latest"
        env:
          - name: APIKEY
            value: "{{ $.Values.global.apikey }}"
        command:
          - "/bin/sh"
          - "-ec"
        args:
          - "curl -k -v -H 'Content-Type: application/json' -X POST \"http://servarr-jellyseerr.{{ .Release.Namespace }}.svc.cluster.local:10241/api/v1/settings/sonarr\" -d '{\"name\": \"Sonarr\", \"hostname\": \"servarr-sonarr\", \"port\": 8989, \"apiKey\": \"$(APIKEY)\", \"useSsl\": false, \"activeProfileId\": 4, \"activeLanguageProfileId\": 1, \"activeProfileName\": \"HD-1080p\", \"activeDirectory\": \"/mnt/media\", \"activeAnimeProfileId\": 4, \"activeAnimeLanguageProfileId\": 1,\"activeAnimeProfileName\": \"HD-1080p\", \"activeAnimeDirectory\": \"/mnt/media\", \"tags\": [], \"animeTags\": [], \"is4k\": false, \"isDefault\": true, \"enableSeasonFolders\": true,\"syncEnabled\": false, \"preventSearch\": false, \"tagRequests\": true}'"
      - name: integrate-radarr
        image: "rapidfort/curl:latest"
        env:
          - name: APIKEY
            value: "{{ $.Values.global.apikey }}"
        command:
          - "/bin/sh"
          - "-ec"
        args:
          - "curl -k -v -H 'Content-Type: application/json' -X POST \"http://servarr-jellyseerr.{{ .Release.Namespace }}.svc.cluster.local:10241/api/v1/settings/radarr\" -d '{\"name\": \"Radarr\",\"hostname\": \"servarr-radarr\",\"port\": 7878,\"apiKey\": \"$(APIKEY)\",\"useSsl\": false,\"activeProfileId\": 4,\"activeProfileName\": \"HD-1080p\",\"activeDirectory\": \"/mnt/media\",\"is4k\": false,\"minimumAvailability\": \"released\",\"tags\": [],\"isDefault\": true,\"syncEnabled\": false,\"preventSearch\": false,\"tagRequests\": true}'"
      - name: finalize-initial-setup
        image: "rapidfort/curl:latest"
        env:
          - name: APIKEY
            value: "{{ $.Values.global.apikey }}"
        command:
          - "/bin/sh"
          - "-ec"
        args:
          - "curl -k -v -H 'Content-Type: application/json' -X POST \"http://servarr-jellyseerr.{{ .Release.Namespace }}.svc.cluster.local:10241/api/v1/settings/initialize\""
{{- end }}