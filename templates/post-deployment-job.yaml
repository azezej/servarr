apiVersion: batch/v1
kind: Job
metadata:
  name: post-install-job
  labels:
    release: "{{ .Release.Name }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-delete-policy": before-hook-creation
    "helm.sh/hook-weight": "5"
spec:
  backoffLimit: 1
  template:
    metadata:
      name: "{{.Release.Name}}-config-finalizer"
      labels:
        app: "{{ .Release.Name }}"
    spec:
      restartPolicy: Never
      initContainers:
        - name: init-prowlarr
          image: rapidfort/curl:latest
          command:
            [
              "sh",
              "-c",
              "until curl  \"http://servarr-prowlarr.{{ .Release.Namespace }}.svc.cluster.local:9696\"; do echo waiting for servarr-prowlarr; sleep 5; done;",
            ]
        - name: init-sonarr
          image: rapidfort/curl:latest
          command:
            [
              "sh",
              "-c",
              "until curl  \"http://servarr-sonarr.{{ .Release.Namespace }}.svc.cluster.local:8989\"; do echo waiting for servarr-sonarr; sleep 5; done;",
            ]
        - name: init-radarr
          image: rapidfort/curl:latest
          command:
            [
              "sh",
              "-c",
              "until curl  \"http://servarr-radarr.{{ .Release.Namespace }}.svc.cluster.local:7878\"; do echo waiting for servarr-radarr; sleep 5; done;",
            ]
      containers:
        - name: prowlarr-add-flaresolverr-tag
          image: "rapidfort/curl:latest"
          command:
            - "/bin/sh"
            - "-ec"
          args:
            - "curl -k -X POST \"http://servarr-prowlarr.{{ .Release.Namespace }}.svc.cluster.local:9696/api/v1/tag\" -H 'content-type: application/json' -H 'x-api-key: $(APIKEY)' -H 'x-requested-with: XMLHttpRequest' -d '{\"label\":\"flare\"}'" 
          env:
            - name: APIKEY
              value: "{{ .Values.global.apikey }}"
        - name: prowlarr-vs-sonarr-finalizer
          image: "rapidfort/curl:latest"
          command:
            - "/bin/sh"
            - "-ec"
          args:
             - "curl -X POST -H 'Content-Type: application/json' -H 'X-Api-Key: $(APIKEY)' -H 'X-Prowlarr-Client: true' -H 'X-Requested-With: XMLHttpRequest' -d '{\"syncLevel\":\"fullSync\",\"fields\":[{\"name\":\"prowlarrUrl\",\"value\":\"http://servarr-prowlarr:9696\"},{\"name\":\"baseUrl\",\"value\":\"http://servarr-radarr:7878\"},{\"name\":\"apiKey\",\"value\":\"$(APIKEY)\"},{\"name\":\"syncCategories\",\"value\":[2000,2010,2020,2030,2040,2045,2050,2060,2070,2080,2090]}],\"implementationName\":\"Radarr\",\"implementation\":\"Radarr\",\"configContract\":\"RadarrSettings\",\"infoLink\":\"https://wiki.servarr.com/prowlarr/supported#radarr\",\"tags\":[],\"name\":\"Radarr\"}' \"http://servarr-prowlarr.{{ .Release.Namespace }}.svc.cluster.local:9696/api/v1/applications\"" 
          env:
            - name: APIKEY
              value: "{{ .Values.global.apikey }}"
        - name: prowlarr-vs-radarr-finalizer
          image: "rapidfort/curl:latest"
          command:
            - "/bin/sh"
            - "-ec"
          args:
            - "curl -X POST -H 'Content-Type: application/json' -H 'X-Api-Key: $(APIKEY)' -H 'X-Prowlarr-Client: true' -H 'X-Requested-With: XMLHttpRequest' -d '{\"syncLevel\":\"fullSync\",\"fields\":[{\"name\":\"prowlarrUrl\",\"value\":\"http://servarr-prowlarr:9696\"},{\"name\":\"baseUrl\",\"value\":\"http://servarr-sonarr:8989\"},{\"name\":\"apiKey\",\"value\":\"$(APIKEY)\"},{\"name\":\"syncCategories\",\"value\":[5000,5010,5020,5030,5040,5045,5050,5090]},{\"name\":\"animeSyncCategories\",\"value\":[5070]},{\"name\":\"syncAnimeStandardFormatSearch\",\"value\":false}],\"implementationName\":\"Sonarr\",\"implementation\":\"Sonarr\",\"configContract\":\"SonarrSettings\",\"infoLink\":\"https://wiki.servarr.com/prowlarr/supported#sonarr\",\"tags\":[],\"name\":\"Sonarr\"}' \"http://servarr-prowlarr.{{ .Release.Namespace }}.svc.cluster.local:9696/api/v1/applications\"" 
          env:
            - name: APIKEY
              value: "{{ .Values.global.apikey }}"
        - name: radarr-vs-qbt-finalizer
          image: "rapidfort/curl:latest"
          command:
            - "/bin/sh"
            - "-ec"
          args:
            - "curl -k -X POST \"http://servarr-radarr.{{ .Release.Namespace }}.svc.cluster.local:7878/api/v3/downloadclient\" -H 'content-type: application/json' -H 'x-api-key: $(APIKEY)' -H 'x-requested-with: XMLHttpRequest' -d '{\"enable\":true,\"protocol\":\"torrent\",\"priority\":1,\"removeCompletedDownloads\":true,\"removeFailedDownloads\":true,\"name\":\"qBittorrent\",\"fields\":[{\"name\":\"host\",\"value\":\"servarr-qbittorrent\"},{\"name\":\"port\",\"value\":\"10095\"},{\"name\":\"useSsl\",\"value\":false},{\"name\":\"urlBase\"},{\"name\":\"username\",\"value\":\"$(TORRENT_ADMIN)\"},{\"name\":\"password\",\"value\":\"$(TORRENT_PASSWORD)\"},{\"name\":\"movieCategory\",\"value\":\"radarr\"},{\"name\":\"movieImportedCategory\"},{\"name\":\"recentMoviePriority\",\"value\":0},{\"name\":\"olderMoviePriority\",\"value\":0},{\"name\":\"initialState\",\"value\":0},{\"name\":\"sequentialOrder\",\"value\":false},{\"name\":\"firstAndLast\",\"value\":false},{\"name\":\"contentLayout\",\"value\":0}],\"implementationName\":\"qBittorrent\",\"implementation\":\"QBittorrent\",\"configContract\":\"QBittorrentSettings\",\"infoLink\":\"https://wiki.servarr.com/radarr/supported#qbittorrent\",\"tags\":[]}'" 
          env:
            - name: APIKEY
              value: "{{ .Values.global.apikey }}"
            - name: TORRENT_ADMIN
              value: "{{ .Values.torrent.username }}"
            - name: TORRENT_PASSWORD
              value: "{{ .Values.torrent.password }}"
        - name: sonarr-vs-qbt-finalizer
          image: "rapidfort/curl:latest"
          command:
            - "/bin/sh"
            - "-ec"
          args:
            - "curl -k -X POST \"http://servarr-sonarr.{{ .Release.Namespace }}.svc.cluster.local:8989/api/v3/downloadclient\" -H 'content-type: application/json' -H 'x-api-key: $(APIKEY)' -H 'x-requested-with: XMLHttpRequest' -d '{\"enable\":true,\"protocol\":\"torrent\",\"priority\":1,\"removeCompletedDownloads\":true,\"removeFailedDownloads\":true,\"name\":\"qBittorrent\",\"fields\":[{\"name\":\"host\",\"value\":\"servarr-qbittorrent\"},{\"name\":\"port\",\"value\":\"10095\"},{\"name\":\"useSsl\",\"value\":false},{\"name\":\"urlBase\"},{\"name\":\"username\",\"value\":\"$(TORRENT_ADMIN)\"},{\"name\":\"password\",\"value\":\"$(TORRENT_PASSWORD)\"},{\"name\":\"movieCategory\",\"value\":\"radarr\"},{\"name\":\"movieImportedCategory\"},{\"name\":\"recentMoviePriority\",\"value\":0},{\"name\":\"olderMoviePriority\",\"value\":0},{\"name\":\"initialState\",\"value\":0},{\"name\":\"sequentialOrder\",\"value\":false},{\"name\":\"firstAndLast\",\"value\":false},{\"name\":\"contentLayout\",\"value\":0}],\"implementationName\":\"qBittorrent\",\"implementation\":\"QBittorrent\",\"configContract\":\"QBittorrentSettings\",\"infoLink\":\"https://wiki.servarr.com/radarr/supported#qbittorrent\",\"tags\":[]}'" 
          env:
            - name: APIKEY
              value: "{{ .Values.global.apikey }}"
            - name: TORRENT_ADMIN
              value: "{{ .Values.torrent.username }}"
            - name: TORRENT_PASSWORD
              value: "{{ .Values.torrent.password }}"
        - name: prowlarr-vs-qbt-finalizer
          image: "rapidfort/curl:latest"
          command:
            - "/bin/sh"
            - "-ec"
          args:
            - "curl -k -X POST \"http://servarr-prowlarr.{{ .Release.Namespace }}.svc.cluster.local:9696/api/v1/downloadclient\" -H 'content-type: application/json' -H 'x-api-key: $(APIKEY)' -H 'x-requested-with: XMLHttpRequest' -d '{\"enable\":true,\"protocol\":\"torrent\",\"priority\":1,\"removeCompletedDownloads\":true,\"removeFailedDownloads\":true,\"name\":\"qBittorrent\",\"fields\":[{\"name\":\"host\",\"value\":\"servarr-qbittorrent\"},{\"name\":\"port\",\"value\":\"10095\"},{\"name\":\"useSsl\",\"value\":false},{\"name\":\"urlBase\"},{\"name\":\"username\",\"value\":\"$(TORRENT_ADMIN)\"},{\"name\":\"password\",\"value\":\"$(TORRENT_PASSWORD)\"},{\"name\":\"movieCategory\",\"value\":\"radarr\"},{\"name\":\"movieImportedCategory\"},{\"name\":\"recentMoviePriority\",\"value\":0},{\"name\":\"olderMoviePriority\",\"value\":0},{\"name\":\"initialState\",\"value\":0},{\"name\":\"sequentialOrder\",\"value\":false},{\"name\":\"firstAndLast\",\"value\":false},{\"name\":\"contentLayout\",\"value\":0}],\"implementationName\":\"qBittorrent\",\"implementation\":\"QBittorrent\",\"configContract\":\"QBittorrentSettings\",\"infoLink\":\"https://wiki.servarr.com/radarr/supported#qbittorrent\",\"tags\":[]}'" 
          env:
            - name: APIKEY
              value: "{{ .Values.global.apikey }}"
            - name: TORRENT_ADMIN
              value: "{{ .Values.torrent.username }}"
            - name: TORRENT_PASSWORD
              value: "{{ .Values.torrent.password }}"
        - name: sonarr-vs-qbt-remote-mapping-finalizer
          image: "rapidfort/curl:latest"
          command:
            - "/bin/sh"
            - "-ec"
          args:
            - "curl -k -X POST \"http://servarr-sonarr.{{ .Release.Namespace }}.svc.cluster.local:8989/api/v3/remotepathmapping\" -H 'content-type: application/json' -H 'x-api-key: $(APIKEY)' -H 'x-requested-with: XMLHttpRequest' -d '{\"host\":\"servarr-qbittorrent\",\"remotePath\":\"/downloads\",\"localPath\":\"/mnt/downloads/\"}'" 
          env:
            - name: APIKEY
              value: "{{ .Values.global.apikey }}"
        - name: radarr-vs-qbt-remote-mapping-finalizer
          image: "rapidfort/curl:latest"
          command:
            - "/bin/sh"
            - "-ec"
          args:
            - "curl -k -X POST \"http://servarr-radarr.{{ .Release.Namespace }}.svc.cluster.local:7878/api/v3/remotepathmapping\" -H 'content-type: application/json' -H 'x-api-key: $(APIKEY)' -H 'x-requested-with: XMLHttpRequest' -d '{\"host\":\"servarr-qbittorrent\",\"remotePath\":\"/downloads\",\"localPath\":\"/mnt/downloads/\"}'" 
          env:
            - name: APIKEY
              value: "{{ .Values.global.apikey }}"
        - name: prowlarr-vs-qbt-remote-mapping-finalizer
          image: "rapidfort/curl:latest"
          command:
            - "/bin/sh"
            - "-ec"
          args:
            - "curl -k -X POST \"http://servarr-prowlarr.{{ .Release.Namespace }}.svc.cluster.local:9696/api/v3/remotepathmapping\" -H 'content-type: application/json' -H 'x-api-key: $(APIKEY)' -H 'x-requested-with: XMLHttpRequest' -d '{\"host\":\"servarr-qbittorrent\",\"remotePath\":\"/downloads\",\"localPath\":\"/mnt/downloads/\"}'" 
          env:
            - name: APIKEY
              value: "{{ .Values.global.apikey }}"
        - name: radarr-root-folder-finalizer
          image: "rapidfort/curl:latest"
          command:
            - "/bin/sh"
            - "-ec"
          args:
            - "curl -k -X POST \"http://servarr-radarr.{{ .Release.Namespace }}.svc.cluster.local:7878/api/v3/rootFolder\" -H 'content-type: application/json' -H 'x-api-key: $(APIKEY)' -H 'x-requested-with: XMLHttpRequest' -d '{\"path\":\"/mnt/media/\"}'" 
          env:
            - name: APIKEY
              value: "{{ .Values.global.apikey }}"
        - name: sonarr-root-folder-finalizer
          image: "rapidfort/curl:latest"
          command:
            - "/bin/sh"
            - "-ec"
          args:
            - "curl -k -X POST \"http://servarr-sonarr.{{ .Release.Namespace }}.svc.cluster.local:8989/api/v3/rootFolder\" -H 'content-type: application/json' -H 'x-api-key: $(APIKEY)' -H 'x-requested-with: XMLHttpRequest' -d '{\"path\":\"/mnt/media/\"}'" 
          env:
            - name: APIKEY
              value: "{{ .Values.global.apikey }}"
        - name: prowlarr-vs-flaresolverr-finalizer
          image: "rapidfort/curl:latest"
          command:
            - "/bin/sh"
            - "-ec"
          args:
            - "curl -k -X POST \"http://servarr-prowlarr.{{ .Release.Namespace }}.svc.cluster.local:9696/api/v1/indexerProxy\" -H 'content-type: application/json' -H 'x-api-key: $(APIKEY)' -H 'x-requested-with: XMLHttpRequest' -d '{\"onHealthIssue\":false,\"supportsOnHealthIssue\":false,\"includeHealthWarnings\":false,\"name\":\"FlareSolverr\",\"fields\":[{\"name\":\"host\",\"value\":\"http://servarr-flaresolverr:8191/\"},{\"name\":\"requestTimeout\",\"value\":60}],\"implementationName\":\"FlareSolverr\",\"implementation\":\"FlareSolverr\",\"configContract\":\"FlareSolverrSettings\",\"infoLink\":\"https://wiki.servarr.com/prowlarr/supported#flaresolverr\",\"tags\":[1]}'" 
          env:
            - name: APIKEY
              value: "{{ .Values.global.apikey }}"