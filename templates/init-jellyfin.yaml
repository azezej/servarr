apiVersion: batch/v1
kind: Job
metadata:
  name: jellyfin-init
  labels:
    release: "{{ .Release.Name }}"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    "helm.sh/hook": post-install
    "helm.sh/hook-delete-policy": before-hook-creation
    "helm.sh/hook-weight": "9"
spec:
  backoffLimit: 1
  template:
    metadata:
      name: "{{.Release.Name}}-jellyfin-finalizer"
      labels:
        app: "{{ .Release.Name }}"
    spec:
      restartPolicy: Never
      initContainers:
        - name: wait-for-jellyfin
          image: rapidfort/curl:latest
          command:
            - "sh"
            - "-c"
            - "until curl  \"http://servarr-jellyfin.{{ .Release.Namespace }}.svc.cluster.local:8096\"; do echo waiting for servarr-jellyfin; sleep 5; done;sleep 10;"
      containers:
      - name: setup-location
        image: "rapidfort/curl:latest"
        env:
          - name: APIKEY
            value: "{{ $.Values.global.apikey }}"
        command:
          - "/bin/sh"
          - "-ec"
        args:
          - "curl -k -v -H 'Content-Type: application/json' -X POST \"http://servarr-jellyfin.{{ $.Release.Namespace }}.svc.cluster.local:8096/Startup/Configuration\" -d '{\"UICulture\":\"en-US\",\"MetadataCountryCode\":\"IT\",\"PreferredMetadataLanguage\":\"it\"}'"
      - name: get-first-user
        image: "rapidfort/curl:latest"
        env:
          - name: APIKEY
            value: "{{ $.Values.global.apikey }}"
        command:
          - "/bin/sh"
          - "-ec"
        args:
          - "curl -k -v -H 'Content-Type: application/json' \"http://servarr-jellyfin.{{ $.Release.Namespace }}.svc.cluster.local:8096/Startup/User\""
      - name: setup-user
        image: "rapidfort/curl:latest"
        env:
          - name: JELLYFIN_USERNAME
            value: "{{ $.Values.dash.username }}"
          - name: JELLYFIN_PASSWORD
            value: "{{ $.Values.dash.password }}"
          - name: APIKEY
            value: "{{ $.Values.global.apikey }}"
        command:
          - "/bin/sh"
          - "-ec"
        args:
          - "curl -k -v -H 'Content-Type: application/json' -X POST \"http://servarr-jellyfin.{{ $.Release.Namespace }}.svc.cluster.local:8096/Startup/User\" -d '{\"Name\": \"$(JELLYFIN_USERNAME)\", \"Password\": \"$(JELLYFIN_PASSWORD)\"}'"
      - name: setup-library
        image: "rapidfort/curl:latest"
        env:
          - name: APIKEY
            value: "{{ $.Values.global.apikey }}"
        command:
          - "/bin/sh"
          - "-ec"
        args:
          - "curl -k -v -H 'Content-Type: application/json' -X POST \"http://servarr-jellyfin.{{ $.Release.Namespace }}.svc.cluster.local:8096/Library/VirtualFolders?refreshLibrary=false&name=Library\" -d '{\"LibraryOptions\":{\"EnableArchiveMediaFiles\":false,\"EnablePhotos\":true,\"EnableRealtimeMonitor\":true,\"ExtractChapterImagesDuringLibraryScan\":true,\"EnableChapterImageExtraction\":true,\"EnableInternetProviders\":true,\"SaveLocalMetadata\":true,\"EnableAutomaticSeriesGrouping\":false,\"PreferredMetadataLanguage\":\"it\",\"MetadataCountryCode\":\"IT\",\"SeasonZeroDisplayName\":\"Specials\",\"AutomaticRefreshIntervalDays\":0,\"EnableEmbeddedTitles\":false,\"EnableEmbeddedEpisodeInfos\":false,\"AllowEmbeddedSubtitles\":\"AllowAll\",\"SkipSubtitlesIfEmbeddedSubtitlesPresent\":false,\"SkipSubtitlesIfAudioTrackMatches\":false,\"SaveSubtitlesWithMedia\":true,\"RequirePerfectSubtitleMatch\":true,\"AutomaticallyAddToCollection\":false,\"MetadataSavers\":[],\"TypeOptions\":[{\"Type\":\"Series\",\"MetadataFetchers\":[\"TheMovieDb\",\"The Open Movie Database\"],\"MetadataFetcherOrder\":[\"TheMovieDb\",\"The Open Movie Database\"],\"ImageFetchers\":[\"TheMovieDb\"],\"ImageFetcherOrder\":[\"TheMovieDb\"]},{\"Type\":\"Season\",\"MetadataFetchers\":[\"TheMovieDb\"],\"MetadataFetcherOrder\":[\"TheMovieDb\"],\"ImageFetchers\":[\"TheMovieDb\"],\"ImageFetcherOrder\":[\"TheMovieDb\"]},{\"Type\":\"Episode\",\"MetadataFetchers\":[\"TheMovieDb\",\"The Open Movie Database\"],\"MetadataFetcherOrder\":[\"TheMovieDb\",\"The Open Movie Database\"],\"ImageFetchers\":[\"TheMovieDb\",\"The Open Movie Database\",\"Embedded Image Extractor\",\"Screen Grabber\"],\"ImageFetcherOrder\":[\"TheMovieDb\",\"The Open Movie Database\",\"Embedded Image Extractor\",\"Screen Grabber\"]},{\"Type\":\"Movie\",\"MetadataFetchers\":[\"TheMovieDb\",\"The Open Movie Database\"],\"MetadataFetcherOrder\":[\"TheMovieDb\",\"The Open Movie Database\"],\"ImageFetchers\":[\"TheMovieDb\",\"The Open Movie Database\",\"Embedded Image Extractor\",\"Screen Grabber\"],\"ImageFetcherOrder\":[\"TheMovieDb\",\"The Open Movie Database\",\"Embedded Image Extractor\",\"Screen Grabber\"]}],\"LocalMetadataReaderOrder\":[\"Nfo\"],\"SubtitleDownloadLanguages\":[],\"DisabledSubtitleFetchers\":[],\"SubtitleFetcherOrder\":[],\"PathInfos\":[{\"Path\":\"/mnt/media\"}]}}'"
      - name: setup-location-2
        image: "rapidfort/curl:latest"
        env:
          - name: APIKEY
            value: "{{ $.Values.global.apikey }}"
        command:
          - "/bin/sh"
          - "-ec"
        args:
          - "curl -k -v -H 'Content-Type: application/json' -X POST \"http://servarr-jellyfin.{{ $.Release.Namespace }}.svc.cluster.local:8096/Startup/Configuration\" -d '{\"UICulture\":\"en-US\",\"MetadataCountryCode\":\"IT\",\"PreferredMetadataLanguage\":\"it\"}'"
      - name: setup-remote-access
        image: "rapidfort/curl:latest"
        env:
          - name: APIKEY
            value: "{{ $.Values.global.apikey }}"
        command:
          - "/bin/sh"
          - "-ec"
        args:
          - "curl -k -v -H 'Content-Type: application/json' -X POST \"http://servarr-jellyfin.{{ $.Release.Namespace }}.svc.cluster.local:8096/Startup/RemoteAccess\" -d '{\"EnableRemoteAccess\":true,\"EnableAutomaticPortMapping\":false}'"
      - name: setup-wizard-completion
        image: "rapidfort/curl:latest"
        env:
          - name: APIKEY
            value: "{{ $.Values.global.apikey }}"
        command:
          - "/bin/sh"
          - "-ec"
        args:
          - "curl -k -v -X POST \"http://servarr-jellyfin.{{ $.Release.Namespace }}.svc.cluster.local:8096/Startup/Complete\" --data-raw ''"

